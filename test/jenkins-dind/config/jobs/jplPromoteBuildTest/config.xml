<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.14.1">
  <actions>
    <io.jenkins.blueocean.service.embedded.BlueOceanUrlAction plugin="blueocean-rest-impl@1.2.4">
      <blueOceanUrlObject class="io.jenkins.blueocean.service.embedded.BlueOceanUrlObjectImpl">
        <mappedUrl>blue/organizations/jenkins/jplPromoteBuildTest</mappedUrl>
      </blueOceanUrlObject>
    </io.jenkins.blueocean.service.embedded.BlueOceanUrlAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.1.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>jplPromoteBuildTest</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.40">
    <script>#!groovy

// Initialize cfg
cfg = jplConfig(&apos;jplPromoteBuildTest&apos;, &apos;backend&apos;)
cfg.BRANCH_NAME=&quot;release/v9.9.9&quot;
cfg.repository.url = &apos;file:////tmp/jenkins-pipeline-library&apos;
cfg.repository.branch = &apos;release/v9.9.9&apos;

// The pipeline
pipeline {

    agent none

    stages {
        stage (&apos;jplPromoteBuild Test - Initialize&apos;) {
            agent { label &apos;master&apos; }
            steps  {
                echo &quot;jplPromoteBuild Test - Initialize&quot;
                sh &quot;printenv&quot;
                println cfg
                jplStart(cfg)
            }
        }
        stage (&apos;jplPromoteBuild Test - Promote Build&apos;) {
            steps {
                echo &quot;jplPromoteBuild Test - Promote Build&quot;;
                timeout(time: 5, unit: &apos;SECONDS&apos;) {
                    jplPromoteBuild(cfg)
                }
            }
        }
    }

    options {
        timestamps()
        ansiColor(&apos;xterm&apos;)
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>